Task-1 Optimization
Метод и так достаточно оптимизирован. Объект Rfc2898DeriveBytes создан для зашифровывания пароля и без снижения количества итераций невозможно увеличитьь скорость генерации хэша.
Он намеренно такми сделан, чтобы осложнить brute force пароля. 
Что сделано для увеличения - перенос на .net core, по сравнению со стандартным фрэймворком это привело к увеличению скорости в 10 раз.
Переход от стандартного массива к массиву, выделенному на стеке. Это особой прибавки не принесло так как выделение одного массива в куче дешево.

Task-2 Asp app images download optimization
Изначально для загрузки использовался метод, который сначала тянул id картинок, а затем по одной тащил их из базы. 
Первым шагом было то, что я сразу тащил нужную инфу из базы, минуя стадию id. Это ускорило работу и намного снизило количество обращений к базе.
Далее я заметил, что эти картинки хранятся в папке content в проекте и можно просто тянуть название картинки из базы, а раздавать их уже из папки со статикой.

Task-3 Game Of Life
1) При остановке и снова запуске в случае если реклама была не закрыта, то приложение не закрывало корректно старую рекламу, но в массив добавляла новую, таким образом ссылка на
старую рекламу терялась и корректного освобождения ресурсов не происходило, в итоге это приводило в утечке памяти и к падениям приложения. Я добавил обработку остановки изапуска приложения.
2) В самой рекламе при смене картинки  каждый раз вновь создавались не сколько объектов(ImageBrush, BitmapImage). Это приводило к постепенному росту расхода памяти. Я добавил инициализацию 
этих картинок в конструктор, в итоге они переиспользуются пока рекламу не закрыли.
3) В самой игре поддерживалось несколько массивов - для текущего поколения, будущего, я совместил информацию в одном месте что привело к меньшему количеству создаваемых объектов в 2 раза.
4) В изначальной версии на каждом ходу для каждой ячейки высчитывалось количство соседних живых ячеек, я изменил алгоритм таким образом, что в каждой ячейке поддерживается 
текущее количество соседних живых ячеек, в случае если ячейка измениет свой статус, то она изменяет этот параметр у соседних ячеек. Это позволяет снизить назрузку на процессор.

Task-4 Dump analysis
После анализа дампа стало понятно, что приложение не обрабатывает корректно ситуации с неверным вводом пользователя.
Мною был декомпилировано приложение, внесены изменения, теперь оно выдает ошибку пользователю и не падает в случае неверного ввода.